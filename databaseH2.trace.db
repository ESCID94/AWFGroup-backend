2022-06-28 23:32:52 jdbc[74]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PRODUCTS" not found; SQL statement:
select * from products [42102-212]
2022-07-01 05:04:38 database: wrong user or password; user: "ADMIN"
org.h2.message.DbException: Wrong user name or password [28000-212]
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.engine.Engine.openSession(Engine.java:154)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.util.JdbcUtils.getConnection(JdbcUtils.java:288)
	at org.h2.server.web.WebServer.getConnection(WebServer.java:808)
	at org.h2.server.web.WebApp.login(WebApp.java:1033)
	at org.h2.server.web.WebApp.process(WebApp.java:226)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:176)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:129)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:166)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLInvalidAuthorizationSpecException: Wrong user name or password [28000-212]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:510)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 42 more
2022-07-01 05:04:43 database: wrong user or password; user: "ADMIN"
org.h2.message.DbException: Wrong user name or password [28000-212]
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.engine.Engine.openSession(Engine.java:154)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.util.JdbcUtils.getConnection(JdbcUtils.java:288)
	at org.h2.server.web.WebServer.getConnection(WebServer.java:808)
	at org.h2.server.web.WebApp.login(WebApp.java:1033)
	at org.h2.server.web.WebApp.process(WebApp.java:226)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:176)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:129)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:166)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLInvalidAuthorizationSpecException: Wrong user name or password [28000-212]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:510)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 42 more
2022-07-01 06:31:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]USER ( id int NOT NULL auto_increment, email VARCHAR(50), password VARCHAR(50), CONSTRAINT user_pk PRIMARY KEY (id) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS USER ( id int NOT NULL auto_increment, email VARCHAR(50), password VARCHAR(50), CONSTRAINT user_pk PRIMARY KEY (id) ) [42001-212]
2022-07-01 06:33:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]USER ( id_user int NOT NULL auto_increment, email VARCHAR(50), password VARCHAR(50), CONSTRAINT user_pk PRIMARY KEY (id_user) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS USER ( id_user int NOT NULL auto_increment, email VARCHAR(50), password VARCHAR(50), CONSTRAINT user_pk PRIMARY KEY (id_user) ) [42001-212]
2022-07-01 06:34:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]USER ( id_user int PRIMARY KEY auto_increment, email VARCHAR(50), password VARCHAR(50), CONSTRAINT user_pk PRIMARY KEY (id_user) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS USER ( id_user int PRIMARY KEY auto_increment, email VARCHAR(50), password VARCHAR(50), CONSTRAINT user_pk PRIMARY KEY (id_user) ) [42001-212]
2022-07-01 06:35:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]USER ( id_user int PRIMARY KEY auto_increment, email VARCHAR(50), password VARCHAR(50), )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS USER ( id_user int PRIMARY KEY auto_increment, email VARCHAR(50), password VARCHAR(50), ) [42001-212]
2022-07-01 06:35:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]USER ( id_user int PRIMARY KEY auto_increment, email VARCHAR(50), password VARCHAR(50) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS USER ( id_user int PRIMARY KEY auto_increment, email VARCHAR(50), password VARCHAR(50) ) [42001-212]
2022-07-01 06:35:50 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]USER (\000d\000a    id_user int PRIMARY KEY auto_increment,\000d\000a    email VARCHAR(50),\000d\000a    password VARCHAR(50)\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS USER (
    id_user int PRIMARY KEY auto_increment,
    email VARCHAR(50),
    password VARCHAR(50)
) [42001-212]
2022-07-01 06:36:41 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]USER (\000d\000a    id_user int  auto_increment,\000d\000a    email VARCHAR(50),\000d\000a    password VARCHAR(50)\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS USER (
    id_user int  auto_increment,
    email VARCHAR(50),
    password VARCHAR(50)
) [42001-212]
2022-07-01 06:36:55 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]USER (\000d\000a    id_user int  auto_increment,\000d\000a    email VARCHAR(50),\000d\000a    password VARCHAR(50)\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS USER (
    id_user int  auto_increment,
    email VARCHAR(50),
    password VARCHAR(50)
) [42001-212]
2022-07-01 06:37:40 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]USER (\000d\000a    id_user int  auto_increment,\000d\000a    email VARCHAR(50),\000d\000a    password VARCHAR(50)\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS USER (
    id_user int  auto_increment,
    email VARCHAR(50),
    password VARCHAR(50)
) [42001-212]
2022-07-01 06:38:06 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]USER (\000d\000a    id_user int  auto_increment,\000d\000a    email VARCHAR(50),\000d\000a    password VARCHAR(50)\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS USER (
    id_user int  auto_increment,
    email VARCHAR(50),
    password VARCHAR(50)
) [42001-212]
2022-07-01 06:38:06 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE [*]USER(\000d\000aid INT NOT NULL auto_increment,\000d\000aemail VARCHAR(50) NOT NULL,\000d\000apassword VARCHAR(20) NOT NULL\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE USER(
id INT NOT NULL auto_increment,
email VARCHAR(50) NOT NULL,
password VARCHAR(20) NOT NULL
) [42001-212]
2022-07-01 06:38:17 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]USER (\000d\000a    id_user int  auto_increment,\000d\000a    email VARCHAR(50),\000d\000a    password VARCHAR(50)\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS USER (
    id_user int  auto_increment,
    email VARCHAR(50),
    password VARCHAR(50)
) [42001-212]
2022-07-01 06:38:17 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE [*]USER(\000d\000aid INT NOT NULL auto_increment,\000d\000aemail VARCHAR(50) NOT NULL,\000d\000apass VARCHAR(20) NOT NULL\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE USER(
id INT NOT NULL auto_increment,
email VARCHAR(50) NOT NULL,
pass VARCHAR(20) NOT NULL
) [42001-212]
2022-07-01 06:38:23 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]USER (\000d\000a    id_user int  auto_increment,\000d\000a    email VARCHAR(50),\000d\000a    password VARCHAR(50)\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS USER (
    id_user int  auto_increment,
    email VARCHAR(50),
    password VARCHAR(50)
) [42001-212]
2022-07-01 06:38:35 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]USER (\000d\000a    id_user int  auto_increment,\000d\000a    email VARCHAR(50),\000d\000a    password VARCHAR(50)\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS USER (
    id_user int  auto_increment,
    email VARCHAR(50),
    password VARCHAR(50)
) [42001-212]
2022-07-01 06:38:35 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "USERS" already exists; SQL statement:
CREATE TABLE USERS(
id INT NOT NULL auto_increment,
email VARCHAR(50) NOT NULL,
pass VARCHAR(20) NOT NULL
) [42101-212]
2022-07-01 06:38:42 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]USER (\000d\000a    id_user int  auto_increment,\000d\000a    email VARCHAR(50),\000d\000a    password VARCHAR(50)\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS USER (
    id_user int  auto_increment,
    email VARCHAR(50),
    password VARCHAR(50)
) [42001-212]
2022-07-01 07:06:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Unknown data type: "PRIMARY"; SQL statement:
CREATE TABLE IF NOT EXISTS USERS ( email PRIMARY KEY VARCHAR(50), password VARCHAR(50) ) [50004-212]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.readIfDataType1(Parser.java:6199)
	at org.h2.command.Parser.readIfDataType(Parser.java:6040)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:6022)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:5897)
	at org.h2.command.Parser.parseTableColumnDefinition(Parser.java:9328)
	at org.h2.command.Parser.parseCreateTable(Parser.java:9266)
	at org.h2.command.Parser.parseCreate(Parser.java:6745)
	at org.h2.command.Parser.parsePrepared(Parser.java:763)
	at org.h2.command.Parser.parse(Parser.java:691)
	at org.h2.command.Parser.parse(Parser.java:661)
	at org.h2.command.Parser.prepareCommand(Parser.java:568)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:90)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:97)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:75)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.animalworldfarmsgroup.AwfApiRestApplication.main(AwfApiRestApplication.java:27)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2022-07-01 07:07:14 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Unknown data type: "PRIMARY"; SQL statement:
CREATE TABLE IF NOT EXISTS USERS (
    email PRIMARY KEY VARCHAR(50),
    password VARCHAR(50)
) [50004-212]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.readIfDataType1(Parser.java:6199)
	at org.h2.command.Parser.readIfDataType(Parser.java:6040)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:6022)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:5897)
	at org.h2.command.Parser.parseTableColumnDefinition(Parser.java:9328)
	at org.h2.command.Parser.parseCreateTable(Parser.java:9266)
	at org.h2.command.Parser.parseCreate(Parser.java:6745)
	at org.h2.command.Parser.parsePrepared(Parser.java:763)
	at org.h2.command.Parser.parse(Parser.java:691)
	at org.h2.command.Parser.parse(Parser.java:661)
	at org.h2.command.Parser.prepareCommand(Parser.java:568)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1339)
	at org.h2.server.web.WebApp.query(WebApp.java:1137)
	at org.h2.server.web.WebApp.query(WebApp.java:1113)
	at org.h2.server.web.WebApp.process(WebApp.java:244)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:176)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:129)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:166)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
